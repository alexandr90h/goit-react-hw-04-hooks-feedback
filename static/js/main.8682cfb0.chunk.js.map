{"version":3,"sources":["Statistic/statistic.module.scss","Statistic/StatisticItem.jsx","Statistic/FeedbackOptions.jsx","Statistic/Notification.jsx","Statistic/Statistic.jsx","App.js","index.js"],"names":["module","exports","StatisticItem","good","neutral","bad","total","positivePercentage","className","styles","listStats","FeedbackOptions","conteinerButton","type","onClick","Notification","message","conteinerNotification","Statistic","useState","setGood","setNeutral","setBad","countTotalFeedback","conteinerStats","Math","round","Stats","protoTypes","PropTypes","number","ReactDOM","render","document","querySelector"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,gBAAkB,mCAAmC,sBAAwB,yCAAyC,UAAY,+B,6ICCxL,SAASC,EAAT,GAA2E,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAChE,OAAQ,qBAAIC,UAAWC,IAAOC,UAAtB,UACH,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UCPO,SAASI,EAAT,GAAkD,IAAvBR,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,IACtC,OAAQ,sBAAKG,UAAWC,IAAOG,gBAAvB,UACP,wBAAQC,KAAK,SAASC,QAASX,EAA/B,kBACA,wBAAQU,KAAK,SAASC,QAASV,EAA/B,qBACA,wBAAQS,KAAK,SAASC,QAAST,EAA/B,oBCJL,SAASU,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OAAQ,qBAAKR,UAAWC,IAAOQ,sBAAvB,SAA8C,4BAAID,MCK/C,SAASE,IAAa,IAAD,EACRC,mBAAS,GADD,mBACzBhB,EADyB,KACnBiB,EADmB,OAEFD,mBAAS,GAFP,mBAEzBf,EAFyB,KAEhBiB,EAFgB,OAGXF,mBAAS,GAHE,mBAGzBd,EAHyB,KAGrBiB,EAHqB,KAa3BC,EAAqB,WACtB,OAAQpB,EAAKC,EAAQC,GAUzB,OACI,sBAAKG,UAAWC,IAAOe,eAAvB,UACS,uDACA,cAACb,EAAD,CACGR,KAxBG,WACfiB,EAAQjB,EAAO,IAwBHC,QAtBO,WACnBiB,EAAWjB,EAAU,IAsBTC,IApBE,WACfiB,EAAOjB,EAAM,MAqBH,4CACEF,EAAKC,EAAQC,IAAS,EAAI,cAACH,EAAD,CACzBC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,IACPhB,mBArBC,IAATJ,EACO,EAEJsB,KAAKC,MAAMvB,EAAMoB,IAAsB,OAmBrC,cAACR,EAAD,CAAcC,QAAQ,yBC5CxB,SAASW,IACxB,OAAO,cAACT,EAAD,IJQPhB,EAAc0B,WAAa,CACvBzB,KAAM0B,IAAUC,OAChB1B,QAASyB,IAAUC,OACnBzB,IAAKwB,IAAUC,OACfxB,MAAOuB,IAAUC,OACjBvB,mBAAmBsB,IAAUC,QKXjCC,IAASC,OAAO,cAACL,EAAD,IAASM,SAASC,cAAc,Y","file":"static/js/main.8682cfb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteinerStats\":\"statistic_conteinerStats__WDbGf\",\"conteinerButton\":\"statistic_conteinerButton__1HHIN\",\"conteinerNotification\":\"statistic_conteinerNotification__3vmhM\",\"listStats\":\"statistic_listStats__2DuVF\"};","import PropTypes from 'prop-types';\r\nimport styles from './statistic.module.scss';\r\nexport default function StatisticItem({ good, neutral, bad, total, positivePercentage }) {\r\n   return (<ul className={styles.listStats}>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positivePercentage}%</li>\r\n    </ul>)\r\n}\r\nStatisticItem.protoTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage:PropTypes.number,\r\n}","import styles from './statistic.module.scss';\r\nexport default function FeedbackOptions({ good, neutral, bad }) {\r\n                   return (<div className={styles.conteinerButton}>\r\n                    <button type='button' onClick={good}>Good</button>\r\n                    <button type='button' onClick={neutral}>Neutral</button>\r\n                    <button type='button' onClick={bad}>Bad</button>\r\n                </div>)\r\n\r\n}","import styles from './statistic.module.scss';\r\nexport default function Notification({ message }) {\r\n    return (<div className={styles.conteinerNotification}><p>{message}</p></div>)\r\n}","// import Props from 'prop-types';\r\nimport styles from './statistic.module.scss';\r\nimport StatisticItem from './StatisticItem';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Notification from './Notification';\r\nimport { useState } from 'react';\r\n\r\nexport default function Statistic() {\r\n    const [good, setGood] = useState(0);\r\n    const [neutral, setNeutral] = useState(0);\r\n    const [bad,setBad] = useState(0);\r\n   const decrementGood=()=> {\r\n        setGood(good + 1);\r\n    }\r\n    const decrementNeutral=()=> {\r\n        setNeutral(neutral + 1);\r\n        }\r\n   const decrementBad=()=> {\r\n       setBad(bad + 1);\r\n    }\r\n   const countTotalFeedback = () => {\r\n        return (good+neutral+bad);\r\n    }\r\n   const countPositiveFeedbackPercentage = () => {\r\n        if (good === 0) {\r\n            return(0)\r\n        }\r\n        return(Math.round(good/(countTotalFeedback())*100))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.conteinerStats}>\r\n                 <h2>Please leave feedback</h2>\r\n                 <FeedbackOptions\r\n                    good={decrementGood}\r\n                    neutral={decrementNeutral}\r\n                    bad={decrementBad}\r\n                />\r\n                 <h2>Statistics</h2>\r\n                 {(good+neutral+bad) !== 0 ? <StatisticItem\r\n                    good={good}\r\n                    neutral={neutral}\r\n                    bad={bad}\r\n                    total={countTotalFeedback()}\r\n                    positivePercentage={countPositiveFeedbackPercentage()}\r\n            /> : <Notification message=\"No feedback given\" />}\r\n        </div>)\r\n};","import Statistic from './Statistic/Statistic';\r\n\r\nexport default function Stats(){\r\nreturn(<Statistic/>)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport Stats from './App';\r\n\r\nReactDOM.render(<Stats/>,document.querySelector('#root'))"],"sourceRoot":""}